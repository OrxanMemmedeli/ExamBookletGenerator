--------------------------  HAZIRLA  --------------------------

* Validation yaz esas entityler ucun (Core hisseye)
* singnalR


APP
* AutoMapper
* Fluent Validation
* Configurations


Core
│
│
├── Mapping
│   ├── AutoMapperProfile.cs
│   └── CustomMapper.cs
│
├── Validation
│   ├── Common
│   │   └── CompanyCreateValidator.cs  // "DTO" redundantdır
│   │
│   ├── CompanyEditValidator.cs
│   ├── DebtCreateValidator.cs        // PaymentOfDebt qısaldıldı
│   ├── RoleCreateValidator.cs
│   ├── RoleEditValidator.cs
│   ├── UserCreateValidator.cs
│   └── UserEditValidator.cs
│
└── ViewModelValidation
    └── PasswordChangeValidator.cs   // "UserPasswordChange" qısaldıldı



--------------------------   Belke   --------------------------
* Core hissesi ucun ele bir sey yazmaq lazimdir ki, basqqa proyektde Engindeki kimi cagirmaq olsun (Elemek vacibdir)
* Loglama ucun alet istifadesi (Oneeeeelsab etmirem)



--------------------------HAZIRLANMIS--------------------------
* alinsa Core hisseye configuration yaz
* Repositry ucun global yaz hamisini alsin avtomatik. Amma unutma ki Core ve App seviyyesi olacaq
    * Butun Root deyerlerini tapan methoduda yaz
* alinsa Core hisseye Global Error Handling elave et Middleware olaraq. 
* Base Responce model qur (alinsa Core hisseye)
* View Generator hissesi yazmaq 
* Health Check kitabxanasi yukle (imkan olsa Core hisseye)
* Hangifire istifade et ve onun ucun merkezlesdirilmis generik method yaz (Core hisseye)
* Rate Limit hisseside elave etmek olar Core hisseye
* Core hissede olan aletlerden istifadenin ve ya legv edilmenin teyini
* .Net Core-da olan quyruq mentiqini istifade etmek lazimdir. TechBody sehifesinde var. 
* Claim sinifini teyini
* Authentication Elave et
* Core hisseye ApplicationDbContext elave etmek olarmi?
