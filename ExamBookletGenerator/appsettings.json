{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",

  "EmailSetting": {
    "FromName": "Exam Booklet Creator",
    "SmtpServer": "smtp.gmail.com",
    "SmtpPort": "587",
    "FromAddress": "khansoftdevelopment@gmail.com",
    "Password": "tfxfptxqhqawnogr"
  },

  "MachineName": "DESKTOP-TROAMS4, ORXAN\\SQLEXPRESS01, DESKTOP-E32CBFO",
  "NewMachineName": "DESKTOP-E32CBFO",
  "Development": {
    "DESKTOP-TROAMS4": "Server=DESKTOP-TROAMS4; Database=EBC; Integrated Security=true; MultipleActiveResultSets=True",
    "ORXAN": "Server=ORXAN\\SQLEXPRESS01; Database=EBC; Integrated Security = true; MultipleActiveResultSets = True",
    "DESKTOP-E32CBFO": "Server=DESKTOP-E32CBFO; Database=EBC; Integrated Security = true; MultipleActiveResultSets = True",
    "_": "Server=localhost; Initial Catalog=EBC; Integrated Security = true; MultipleActiveResultSets = True"
  },

  "Production": {
    "_": "Server=161.97.166.102; Database=EBC; User Id=orxan; password=Ov!tBg@A2g2jA@Z; Trusted_Connection=False; MultipleActiveResultSets=true;"
  },

  "GoogleConfig": {
    "Key": "6LfrfoIqAAAAAMIdp_dOJDI4hdNtODdmYVLgypjt",
    "Secret": "6LfrfoIqAAAAAL5v8Koyv58yBZXu1RAmsdOmu3Uf" // Google recaptcha
  },

  "HealthChecks-UI": {
    "HealthChecks": [
      {
        "Name": "SQL Database", // SQL verilənlər bazası sağlamlığını yoxlamaq üçün xidmət adı
        "Uri": "http://localhost:5000/health" // Sağlamlıq yoxlama sorğusu göndəriləcək URL
      }
    ],
    "EvaluationTimeOnSeconds": 10, // Sağlamlıq yoxlamalarının hər 10 saniyədə bir həyata keçirilməsi
    "MinimumSecondsBetweenFailureNotifications": 60 // Başarısızlıq bildirişləri arasında minimum 60 saniyə gözləmə
  },

  "WatchDog": {
    "DbDriver": "MSSQL", // Verilənlər bazası növü (Microsoft SQL Server)
    "ConnectionString": "", // Dinamik olaraq doldurulacaq, JSON faylında boş saxlanılır
    "LogLevel": "Error", // Yalnız "Error" səviyyəsindəki hadisələr qeyd ediləcək
    "AutoClearTime": "Monthly", // Məlumatların hər ay təmizlənməsi
    "WatchPagePath": "/watchdog", // Monitorinq nəticələrini görmək üçün səhifə ünvanı
    "BlackList": [ "/health", "/health-ui", "/profiler" ] // İzlənməyəcək endpointlərin siyahısı
  },

  "IpRateLimiting": {
    "EnableEndpointRateLimiting": true, // Hər bir endpoint üçün fərdi "Rate Limit" tətbiqi
    "StackBlockedRequests": false, // Bloklanan sorğuların yığılmasının deaktiv edilməsi
    "HttpStatusCode": 429, // Rate Limit həddi aşdıqda qaytarılacaq HTTP status kodu

    //"IpWhitelist": [ "127.0.0.1" ], // (Seçimli) Rate Limit-dən azad ediləcək IP ünvanları
    "EndpointWhitelist": [ "*:/api/customers" ], // Rate Limit-dən azad ediləcək endpointlər (məsələn, `/api/customers`)

    "GeneralRules": [ // Ümumi "Rate Limit" qaydaları
      {
        "Endpoint": "*:/api/*", // `/api/` ilə başlayan bütün endpointlər üçün qayda
        "Period": "1s", // 1 saniyəlik dövr müddəti
        "Limit": 10 // Bu dövrdə icazə verilən maksimum 10 sorğu
      },
      {
        "Endpoint": "*:/confirm/*", // `/confirm/` ilə başlayan endpointlər üçün qayda
        "Period": "10s", // 10 saniyəlik dövr müddəti
        "Limit": 10 // Bu dövrdə icazə verilən maksimum 10 sorğu
      },
      {
        "Endpoint": "*", // Bütün endpointlər üçün ümumi qayda
        "Period": "1s", // 1 saniyəlik dövr müddəti
        "Limit": 100 // Bu dövrdə icazə verilən maksimum 10 sorğu
      }
    ],

    "QuotaExceededResponse": {
      "Content": "{{ \"message\": \"istək limiti aşılmışdır.\", \"details\": \"limiti aşıldı. {1} müddətində {0} istək göndərilə bilər.\" }}", // Rate limit həddi aşılarkən qaytarılacaq xüsusi JSON cavab
      "ContentType": "application/json", // Cavabın məzmun tipi JSON olaraq təyin edilir
      "StatusCode": 429 // Rate limit həddi aşdıqda qaytarılacaq status kodu
    }
  },

  "QueueCapacity": "200", // Kuyruğun həcmi 200 olaraq təyin edildi

  "ServiceOptionsSetting": {

  }
}
